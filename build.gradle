plugins {
    id 'java'
    id 'jvm-test-suite'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group 'tunelink'
version '1.0'

repositories {
    mavenCentral()
}

//jar {
//    manifest {
//        attributes "Main-Class": "personal.tunelink.Application"
//    }
//
//    duplicatesStrategy "exclude"
//
//    from {
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    implementation 'org.postgresql:postgresql:42.5.4'
//    implementation 'org.liquibase:liquibase-core'

    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:testcontainers:1.17.6"
    testImplementation "org.testcontainers:junit-jupiter:1.17.6"
    testImplementation "org.testcontainers:postgresql:1.17.6"
}

sourceSets {
    testcommons {
        java {
            srcDir 'src/testcommons/java'
            compileClasspath += sourceSets.main.output
            runtimeClasspath += sourceSets.main.output
        }
    }
}

testing {
    suites {
        test {
            useJUnitJupiter()

            dependencies {
                implementation(sourceSets["testcommons"].output)
            }
        }

        itest(JvmTestSuite) {
            testType = TestSuiteType.INTEGRATION_TEST

            dependencies {
                implementation project()
                implementation(sourceSets["testcommons"].output)
            }

            configurations {
                itestImplementation.extendsFrom testImplementation
                itestRuntime.extendsFrom testRuntime
                itestRuntimeOnly.extendsFrom testRuntimeOnly
            }
        }
    }
}